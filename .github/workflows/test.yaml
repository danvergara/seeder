name: Run Integration Tests

on: [push, pull_request]

jobs:
  integration-test:
    name: Integration Tests
    env:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: users
      DB_DRIVER: postgres
    strategy:
      matrix:
        os: [ubuntu-latest]
        goVer: [1.14, 1.15, 1.16]
    # Defines the platform for each test run.
    runs-on: ${{ matrix.os }}
    # define the container services used to run integration tests
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: users
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # The steps that will be run through for each version and platform combination.
      - name: Set up Go ${{ matrix.goVer }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goVer }}
      # Checks out our code locally so we can work with the files.
      - name: Checkout code
        uses: actions/checkout@v2
      # Caches downloaded modules
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate
      - name: Run migrations
        run: make migrate
      # Runs go test ./... against postgres container
      - name: Test Postgres
        run: make test
